{"id":"../src/systems/clean.ts","dependencies":[{"name":"D:\\projet\\space_snake\\tsconfig.json","includedInParent":true,"mtime":1576583541339},{"name":"D:\\projet\\space_snake\\package.json","includedInParent":true,"mtime":1576500313740}],"generated":{"js":"\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Clean =\n/*#__PURE__*/\nfunction () {\n  function Clean() {\n    _classCallCheck(this, Clean);\n\n    this.name = 'Clean';\n  }\n\n  _createClass(Clean, [{\n    key: \"onUpdate\",\n    value: function onUpdate(em, context) {\n      var entities = em.select(['HasToBeDeleted']);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = entities.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              entity = _step$value[0],\n              componentsMap = _step$value[1];\n\n          em.removeEntity(entity);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Clean;\n}();\n\nexports.Clean = Clean;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":21,"column":4}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":24,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":24,"column":19}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":25,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":9}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":13}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":27,"column":16}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":23}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":28,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":11},"generated":{"line":32,"column":29}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":45},"generated":{"line":32,"column":33}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":32,"column":42}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":33,"column":10}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":33,"column":18}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":33,"column":21}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":33,"column":23}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":33,"column":24}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":33,"column":30}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":33,"column":31}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":33,"column":32}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":33,"column":48}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":33,"column":49}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":50}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":34,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":35,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":36,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":38,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":39,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":39,"column":29}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":48},"generated":{"line":39,"column":37}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":49},"generated":{"line":39,"column":38}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":39,"column":45}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":39,"column":47}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":39,"column":173}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":40,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":41,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":41,"column":14}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":41,"column":20}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":42,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":42,"column":14}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":42,"column":27}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":44,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":44,"column":10}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":44,"column":12}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":44,"column":13}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":44,"column":25}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":44,"column":26}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":44,"column":32}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":13,"column":5},"generated":{"line":45,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":46,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":47,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":48,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":49,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":50,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":51,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":52,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":53,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":54,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":55,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":56,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":57,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":58,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":8,"column":67},"generated":{"line":59,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":14,"column":3},"generated":{"line":60,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":0}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":7}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":8}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":13}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":16}},{"source":"../src/systems/clean.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":66,"column":21}}],"sources":{"../src/systems/clean.ts":"import { EntityManager, System } from '../ecs_engine';\r\nimport { UpdateContext } from '../update_context';\r\nimport { HasToBeDeleted } from '../components/has_to_be_deleted';\r\n\r\nexport class Clean implements System<UpdateContext> {\r\n  name = 'Clean';\r\n\r\n  onUpdate(em: EntityManager<UpdateContext>, context: UpdateContext): void {\r\n    const entities = em.select(['HasToBeDeleted']);\r\n\r\n    for (let [entity, componentsMap] of entities.entries()) {\r\n      em.removeEntity(entity);\r\n    }\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"12284376b87528d05d6257758ac6ddfe","cacheData":{"env":{}}}